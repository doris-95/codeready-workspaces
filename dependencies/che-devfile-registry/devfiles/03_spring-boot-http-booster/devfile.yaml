apiVersion: 1.0.0
metadata:
  name: spring-boot-http-booster
projects:
  - name: spring-boot-http-booster
    source:
      location: 'https://github.com/snowdrop/spring-boot-http-booster'
      type: git
      branch: master
components:
  - id: redhat/java11/latest
    type: chePlugin
  - id: redhat/dependency-analytics/latest
    # NOTE: instead of the old stack-analysis script, should be able to use the latest dependency-analysis plugin instead
    type: chePlugin
  - type: dockerimage
    mountSources: true
    memoryLimit: 512Mi
    volumes:
      - name: m2
        containerPath: /home/jboss/.m2
    image: 'registry.redhat.io/codeready-workspaces/plugin-java11-rhel8:2.2'
    alias: deployment
  - mountSources: true
    endpoints:
      - name: 8000-tcp
        port: 8000
    memoryLimit: 768Mi
    type: dockerimage
    volumes:
      - name: m2
        containerPath: /home/jboss/.m2
    alias: maven
    # TODO: For Z and Power, likely need to switch at build time to an openj9-11 image, if it exists (CRW-758)
    # TODO: switch to registry.redhat.io/jboss-eap-7/eap-xp1-openjdk8-openshift-rhel8:1.0 when it's live (June 1?)
    image: registry-proxy.engineering.redhat.com/rh-osbs/jboss-eap-7-eap-xp1-openjdk8-openshift-rhel7:latest
    env:
      - value: >-
          -XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
          -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4
          -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true
          -Xms20m -Djava.security.egd=file:/dev/./urandom -Duser.home=/home/jboss
        name: MAVEN_OPTS
commands:
  - name: build
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/spring-boot-http-booster'
        type: exec
        command: >-
          MAVEN_OPTS="-Xmx200m" && scl enable rh-maven35 'mvn -Duser.home=${HOME} -DskipTests clean
          install'
        component: maven
  - name: Debug remote java application
    actions:
      - referenceContent: |
          {
           "version": "0.2.0",
           "configurations": [
             {
               "type": "java",
               "name": "Debug (Attach) - Remote",
               "request": "attach",
               "hostName": "localhost",
               "port": 5005
             }]
           }
        type: vscode-launch
  - name: run
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/spring-boot-http-booster'
        type: exec
        command: MAVEN_OPTS="-Xmx200m" && scl enable rh-maven35 'mvn -Duser.home=${HOME} spring-boot:run -Drun.jvmArguments='-Dserver.port=8000''
        component: maven
  - name: debug
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/spring-boot-http-booster'
        type: exec
        command: >-
          scl enable rh-maven35 'mvn  -Duser.home=${HOME} spring-boot:run -Drun.jvmArguments="-Dserver.port=8000 -Xdebug
          -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"'
        component: maven
  - name: test
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/spring-boot-http-booster'
        type: exec
        command: MAVEN_OPTS="-Xmx200m" && scl enable rh-maven35 'mvn -Duser.home=${HOME} verify'
        component: maven
  - name: deploy to OpenShift
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/spring-boot-http-booster'
        type: exec
        command: 'mvn fabric8:deploy -Popenshift -DskipTests'
        component: deployment
